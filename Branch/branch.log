Starting a Gradle Daemon, 2 busy Daemons could not be reused, use --status for details
:compileJava
:processResources UP-TO-DATE
:classes
:bootJar
:jar SKIPPED
:assemble
:compileTestJava NO-SOURCE
:processTestResources NO-SOURCE
:testClasses UP-TO-DATE
:test NO-SOURCE
:check UP-TO-DATE
:build
:bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.3.RELEASE)

2018-07-04 22:05:18.295  INFO 10996 --- [           main] c.t.briyani.app.BriyaniApplication       : Starting BriyaniApplication on WGC1007LBGL72 with PID 10996 (C:\Xigma\Accurev\Briyani\Branch\build\classes\java\main started by SPRANAVA in C:\Xigma\Accurev\Briyani\Branch)
2018-07-04 22:05:18.307  INFO 10996 --- [           main] c.t.briyani.app.BriyaniApplication       : No active profile set, falling back to default profiles: default
2018-07-04 22:05:18.623  INFO 10996 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c97b5d27: startup date [Wed Jul 04 22:05:18 IST 2018]; root of context hierarchy
2018-07-04 22:05:21.978  INFO 10996 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2018-07-04 22:05:23.247  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$68c8675c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:23.279  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:23.291  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@66dfd2d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:23.320  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8d9d0a0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:23.335  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:23.385  INFO 10996 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d01a9f22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:05:24.214  INFO 10996 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63636 (http)
2018-07-04 22:05:24.276  INFO 10996 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-04 22:05:24.276  INFO 10996 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 22:05:24.284  INFO 10996 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin\compressedrefs;C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Xigma\Personal\APPS\Python27;C:\Xigma\Personal\APPS\mysql-5.5.60-winx64\bin;C:\Xigma\Personal\APPS\apache-maven-3.5.4\bin;C:\Xigma\Personal\APPS\OC;C:\ford\jdk\ibm\ibm-jdk8u151-b12\bin;C:\Xigma\Personal\APPS\Gradle\gradle-4.6\bin;C:\Xigma\Personal\APPS\node-v4.8.3-win-x64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319;C:\Program Files\CloudFoundry;C:\Program Files (x86)\RSA SecurID Token Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\7-Zip;C:\Program Files (x86)\AccuRev\bin;C:\Program Files\Adobe\Adobe PDF iFilter 11 for 64-bit platforms\bin\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\PuTTY\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Xigma\Personal\APPS\NodeJS\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\ManagementStudio\;C:\Users\spranava\AppData\Local\GitHubDesktop\bin;C:\Users\spranava\AppData\Roaming\npm;.]
2018-07-04 22:05:24.532  INFO 10996 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-07-04 22:05:24.536  INFO 10996 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5921 ms
2018-07-04 22:05:25.334  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 22:05:25.334  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 22:05:25.334  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 22:05:25.334  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 22:05:25.350  INFO 10996 --- [ost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 22:05:25.350  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 22:05:25.350  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 22:05:25.350  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-04 22:05:25.769  INFO 10996 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2018-07-04 22:05:25.984  INFO 10996 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2018-07-04 22:05:26.064  INFO 10996 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-07-04 22:05:26.095  INFO 10996 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-07-04 22:05:26.316  INFO 10996 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.17.Final}
2018-07-04 22:05:26.316  INFO 10996 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2018-07-04 22:05:26.395  INFO 10996 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-07-04 22:05:26.687  INFO 10996 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Hibernate: alter table branch add constraint FKr5n331c13dyb3kbq1jlo53mh5 foreign key (address_id) references address (address_id)
Hibernate: alter table customer add constraint FKglkhkmh2vyn790ijs6hiqqpi foreign key (address_id) references address (address_id)
Hibernate: alter table item add constraint FKimdwniosg0e3m5t5qksxyd5vb foreign key (menu_id) references menu (id)
Hibernate: alter table order_detail add constraint FK4dtqbi7ilse9x730y087wagm2 foreign key (item_id) references item (id)
Hibernate: alter table order_info add constraint FKjkef7c200omqon2cy66hopchn foreign key (branch_id) references branch (id)
Hibernate: alter table order_info add constraint FKkgr3op99u82sgutpyys8klgl0 foreign key (customer_id) references customer (id)
Hibernate: alter table order_info add constraint FKcypxtb62kv6rakqkjuapurib3 foreign key (address_id) references address (address_id)
Hibernate: alter table order_info_order_details add constraint FKhfq0u4791d974oph5g0fcpa7v foreign key (order_details_order_details_id) references order_detail (order_details_id)
Hibernate: alter table order_info_order_details add constraint FKcypmhwiyttp0tjftylifrns5k foreign key (order_entity_order_id) references order_info (order_id)
Hibernate: alter table rider add constraint FK6h4puhdxui02p93hew7j880ld foreign key (address_id) references address (address_id)
Hibernate: alter table staff add constraint FKp2ddaj8266482gxwjs2dnblaa foreign key (address_id) references address (address_id)
2018-07-04 22:05:28.590  INFO 10996 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-07-04 22:05:28.791  INFO 10996 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]
2018-07-04 22:05:28.872  INFO 10996 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executed SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql] in 80 ms.
SecurityConfig - globalUserDetails - Calling User Service
SecurityConfig - Encoder - Encoder Called
2018-07-04 22:05:31.399  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2018-07-04 22:05:31.402  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2018-07-04 22:05:31.402  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:31.406  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:31.406  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2018-07-04 22:05:31.406  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-04 22:05:31.410  INFO 10996 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2018-07-04 22:05:31.929  INFO 10996 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd54e181, org.springframework.security.web.context.SecurityContextPersistenceFilter@4943a2e, org.springframework.security.web.header.HeaderWriterFilter@618d07e0, org.springframework.security.web.authentication.logout.LogoutFilter@a4e8780e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@96d8c2f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@db526be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45b71601, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2618771c, org.springframework.security.web.session.SessionManagementFilter@3decf4ff, org.springframework.security.web.access.ExceptionTranslationFilter@6fd60b2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b50e3577]
2018-07-04 22:05:31.961  INFO 10996 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@e4908aad, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@90cb0d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ee0b963, org.springframework.security.web.header.HeaderWriterFilter@1cb1b120, org.springframework.security.web.authentication.logout.LogoutFilter@5d9d1c17, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@81380c75, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3898e820, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@afab1d94, org.springframework.security.web.session.SessionManagementFilter@4e16c619, org.springframework.security.web.access.ExceptionTranslationFilter@c432e7af, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f1e8295c]
2018-07-04 22:05:31.965  INFO 10996 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21497a92, org.springframework.security.web.context.SecurityContextPersistenceFilter@738c550, org.springframework.security.web.header.HeaderWriterFilter@25ed5494, org.springframework.security.web.authentication.logout.LogoutFilter@e9c89177, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a0bf3d11, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74c56730, org.springframework.security.web.session.SessionManagementFilter@79c75bde, org.springframework.security.web.access.ExceptionTranslationFilter@a13161c3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a4f604d]
2018-07-04 22:05:32.183  INFO 10996 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:05:32.404  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c97b5d27: startup date [Wed Jul 04 22:05:18 IST 2018]; root of context hierarchy
2018-07-04 22:05:32.472  WARN 10996 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-07-04 22:05:32.528  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchResponse> com.touchmark.briyani.branch.BranchController.getAllBranch()
2018-07-04 22:05:32.532  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchEntity> com.touchmark.briyani.branch.BranchController.saveBranch(com.touchmark.briyani.branch.Branch)
2018-07-04 22:05:32.532  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.customer.CustomerResponse> com.touchmark.briyani.customer.CustomerController.getAll()
2018-07-04 22:05:32.532  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.customer.CustomerEntity> com.touchmark.briyani.customer.CustomerController.saveBranch(com.touchmark.briyani.customer.Customer)
2018-07-04 22:05:32.536  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.customer.CustomerController.delete(java.lang.String)
2018-07-04 22:05:32.536  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemResponse> com.touchmark.briyani.item.ItemController.getAllBranch()
2018-07-04 22:05:32.536  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemEntity> com.touchmark.briyani.item.ItemController.saveBranch(com.touchmark.briyani.item.Item)
2018-07-04 22:05:32.536  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/menu/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.MenuResponse> com.touchmark.briyani.item.MenuController.getAllBranch()
2018-07-04 22:05:32.540  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/menu/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.MenuEntity> com.touchmark.briyani.item.MenuController.saveBranch(com.touchmark.briyani.item.Menu)
2018-07-04 22:05:32.540  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.OrderResponse> com.touchmark.briyani.order.OrderController.getAll()
2018-07-04 22:05:32.540  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/listForCustomer/{id}]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.OrderResponse> com.touchmark.briyani.order.OrderController.getOrdersForCustomer(java.lang.String)
2018-07-04 22:05:32.540  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/createOrder],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.order.OrderController.createOrder(com.touchmark.briyani.order.CreateOrder)
2018-07-04 22:05:32.548  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderResponse> com.touchmark.briyani.rider.RiderController.getAll()
2018-07-04 22:05:32.548  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderEntity> com.touchmark.briyani.rider.RiderController.saveBranch(com.touchmark.briyani.rider.Rider)
2018-07-04 22:05:32.548  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.rider.RiderController.delete(java.lang.String)
2018-07-04 22:05:32.552  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.staff.StaffResponse> com.touchmark.briyani.staff.StaffController.getAll()
2018-07-04 22:05:32.552  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.staff.StaffEntity> com.touchmark.briyani.staff.StaffController.save(com.touchmark.briyani.staff.Staff)
2018-07-04 22:05:32.556  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.staff.StaffController.delete(java.lang.String)
2018-07-04 22:05:32.564  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 22:05:32.564  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 22:05:32.619  INFO 10996 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:05:32.619  INFO 10996 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:05:32.635  INFO 10996 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2018-07-04 22:05:33.733  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c97b5d27: startup date [Wed Jul 04 22:05:18 IST 2018]; root of context hierarchy
2018-07-04 22:05:33.773  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.773  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.773  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.777  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2018-07-04 22:05:33.777  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2018-07-04 22:05:33.781  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-07-04 22:05:33.781  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-07-04 22:05:33.785  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:05:33.785  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-07-04 22:05:33.785  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:05:33.789  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:05:33.793  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-07-04 22:05:33.793  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2018-07-04 22:05:33.801  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.801  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.801  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.805  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.809  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.809  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.809  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.813  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.813  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.813  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2018-07-04 22:05:33.817  INFO 10996 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2018-07-04 22:05:33.833  INFO 10996 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2018-07-04 22:05:33.833  INFO 10996 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:05:34.135  INFO 10996 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-04 22:05:34.140  INFO 10996 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-04 22:05:34.151  INFO 10996 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2018-07-04 22:05:34.167  INFO 10996 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e7944d57: startup date [Wed Jul 04 22:05:34 IST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c97b5d27
2018-07-04 22:05:34.319  INFO 10996 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'handlerExceptionResolver' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=handlerExceptionResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration; factoryMethodName=compositeHandlerExceptionResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class]]
2018-07-04 22:05:34.472  INFO 10996 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63639 (http)
2018-07-04 22:05:34.476  INFO 10996 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-04 22:05:34.476  INFO 10996 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 22:05:34.532  INFO 10996 --- [ost-startStop-1] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2018-07-04 22:05:34.532  INFO 10996 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 365 ms
2018-07-04 22:05:34.613  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-04 22:05:34.613  INFO 10996 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 22:05:34.663  INFO 10996 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 22:05:34.704  INFO 10996 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 22:05:34.704  INFO 10996 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 22:05:34.708  INFO 10996 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 22:05:34.789  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint.invoke(org.springframework.web.context.request.ServletWebRequest)
2018-07-04 22:05:34.805  INFO 10996 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:05:34.805  INFO 10996 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:05:34.871  INFO 10996 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e7944d57: startup date [Wed Jul 04 22:05:34 IST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c97b5d27
2018-07-04 22:05:34.987  INFO 10996 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63639 (http) with context path ''
2018-07-04 22:05:35.059  INFO 10996 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63636 (http) with context path ''
2018-07-04 22:05:35.063  INFO 10996 --- [           main] c.t.briyani.app.BriyaniApplication       : Started BriyaniApplication in 27.648 seconds (JVM running for 28.354)
2018-07-04 22:05:46.783  INFO 10996 --- [io-63636-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 22:05:46.783  INFO 10996 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 22:05:46.815  INFO 10996 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=1, dateAndTime=2018-07-04T22:05:47.099+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=null)
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35.200+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=null)
2018-07-04 22:07:53.036  INFO 10996 --- [io-63636-exec-6] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)])
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=2, dateAndTime=2018-07-04T22:08:00.182+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=18, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=null)
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:08+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=18, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)])
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:08+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=18, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)])
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=3, dateAndTime=2018-07-04T22:08:59.388+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=19, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=null)
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:08+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=18, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:08:59+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=19, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=4, dateAndTime=2018-07-04T22:10:44.937+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=20, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=null)
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 4
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=12, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:07:35+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:08+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=18, doorNumber=null, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=null, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:08:59+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=19, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=4, dateAndTime=2018-07-04T22:10:44+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=20, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=12, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)])
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=5, dateAndTime=2018-07-04T22:12:09.763+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=21, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=null)
Terminate batch job (Y/N)? 
Terminate batch job (Y/N)? 
Terminate batch job (Y/N)? 
Terminate batch job (Y/N)? 
Starting a Gradle Daemon, 2 busy Daemons could not be reused, use --status for details
:compileJava
:processResources UP-TO-DATE
:classes
:bootJar
:jar SKIPPED
:assemble
:compileTestJava NO-SOURCE
:processTestResources NO-SOURCE
:testClasses UP-TO-DATE
:test NO-SOURCE
:check UP-TO-DATE
:build
:bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.3.RELEASE)

2018-07-04 22:16:48.464  INFO 13216 --- [           main] c.t.briyani.app.BriyaniApplication       : Starting BriyaniApplication on WGC1007LBGL72 with PID 13216 (C:\Xigma\Accurev\Briyani\Branch\build\classes\java\main started by SPRANAVA in C:\Xigma\Accurev\Briyani\Branch)
2018-07-04 22:16:48.472  INFO 13216 --- [           main] c.t.briyani.app.BriyaniApplication       : No active profile set, falling back to default profiles: default
2018-07-04 22:16:48.731  INFO 13216 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ae01d60: startup date [Wed Jul 04 22:16:48 IST 2018]; root of context hierarchy
2018-07-04 22:16:51.333  INFO 13216 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2018-07-04 22:16:52.350  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$74acb353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:52.382  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:52.386  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f8a300c6' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:52.414  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$99815605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:52.430  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:52.450  INFO 13216 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbfeeb19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 22:16:53.131  INFO 13216 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63636 (http)
2018-07-04 22:16:53.167  INFO 13216 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-04 22:16:53.167  INFO 13216 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 22:16:53.167  INFO 13216 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin\compressedrefs;C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Xigma\Personal\APPS\Python27;C:\Xigma\Personal\APPS\mysql-5.5.60-winx64\bin;C:\Xigma\Personal\APPS\apache-maven-3.5.4\bin;C:\Xigma\Personal\APPS\OC;C:\ford\jdk\ibm\ibm-jdk8u151-b12\bin;C:\Xigma\Personal\APPS\Gradle\gradle-4.6\bin;C:\Xigma\Personal\APPS\node-v4.8.3-win-x64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319;C:\Program Files\CloudFoundry;C:\Program Files (x86)\RSA SecurID Token Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\7-Zip;C:\Program Files (x86)\AccuRev\bin;C:\Program Files\Adobe\Adobe PDF iFilter 11 for 64-bit platforms\bin\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\PuTTY\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Xigma\Personal\APPS\NodeJS\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\ManagementStudio\;C:\Users\spranava\AppData\Local\GitHubDesktop\bin;C:\Users\spranava\AppData\Roaming\npm;.]
2018-07-04 22:16:53.370  INFO 13216 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-07-04 22:16:53.370  INFO 13216 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4639 ms
2018-07-04 22:16:54.020  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 22:16:54.020  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 22:16:54.020  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 22:16:54.020  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 22:16:54.024  INFO 13216 --- [ost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 22:16:54.024  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 22:16:54.024  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 22:16:54.024  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-04 22:16:54.399  INFO 13216 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2018-07-04 22:16:54.599  INFO 13216 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2018-07-04 22:16:54.696  INFO 13216 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-07-04 22:16:54.716  INFO 13216 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-07-04 22:16:54.847  INFO 13216 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.17.Final}
2018-07-04 22:16:54.847  INFO 13216 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2018-07-04 22:16:54.915  INFO 13216 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-07-04 22:16:55.131  INFO 13216 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Hibernate: alter table branch add constraint FKr5n331c13dyb3kbq1jlo53mh5 foreign key (address_id) references address (address_id)
Hibernate: alter table customer add constraint FKglkhkmh2vyn790ijs6hiqqpi foreign key (address_id) references address (address_id)
Hibernate: alter table item add constraint FKimdwniosg0e3m5t5qksxyd5vb foreign key (menu_id) references menu (id)
Hibernate: alter table order_detail add constraint FK4dtqbi7ilse9x730y087wagm2 foreign key (item_id) references item (id)
Hibernate: alter table order_info add constraint FKjkef7c200omqon2cy66hopchn foreign key (branch_id) references branch (id)
Hibernate: alter table order_info add constraint FKkgr3op99u82sgutpyys8klgl0 foreign key (customer_id) references customer (id)
Hibernate: alter table order_info add constraint FKcypxtb62kv6rakqkjuapurib3 foreign key (address_id) references address (address_id)
Hibernate: alter table order_info_order_details add constraint FKhfq0u4791d974oph5g0fcpa7v foreign key (order_details_order_details_id) references order_detail (order_details_id)
Hibernate: alter table order_info_order_details add constraint FKcypmhwiyttp0tjftylifrns5k foreign key (order_entity_order_id) references order_info (order_id)
Hibernate: alter table rider add constraint FK6h4puhdxui02p93hew7j880ld foreign key (address_id) references address (address_id)
Hibernate: alter table staff add constraint FKp2ddaj8266482gxwjs2dnblaa foreign key (address_id) references address (address_id)
2018-07-04 22:16:56.565  INFO 13216 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-07-04 22:16:56.716  INFO 13216 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]
2018-07-04 22:16:56.772  INFO 13216 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executed SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql] in 56 ms.
SecurityConfig - globalUserDetails - Calling User Service
SecurityConfig - Encoder - Encoder Called
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-04 22:16:58.818  INFO 13216 --- [           main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2018-07-04 22:16:59.374  INFO 13216 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8ac20deb, org.springframework.security.web.context.SecurityContextPersistenceFilter@cbc99aac, org.springframework.security.web.header.HeaderWriterFilter@a2c46a78, org.springframework.security.web.authentication.logout.LogoutFilter@24684040, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@c37bfd40, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f683772, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d3b2ab3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e1dace7, org.springframework.security.web.session.SessionManagementFilter@4c3d51d3, org.springframework.security.web.access.ExceptionTranslationFilter@9ebfe8d7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3164ccdd]
2018-07-04 22:16:59.394  INFO 13216 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@c0f8e3ca, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ea85aa71, org.springframework.security.web.context.SecurityContextPersistenceFilter@a2a607b2, org.springframework.security.web.header.HeaderWriterFilter@52b25fb9, org.springframework.security.web.authentication.logout.LogoutFilter@baeeea38, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@5d51e1e0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77823d3a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1700d5ad, org.springframework.security.web.session.SessionManagementFilter@3d0f5787, org.springframework.security.web.access.ExceptionTranslationFilter@161b0162, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4dd7546e]
2018-07-04 22:16:59.402  INFO 13216 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fcb5a64f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ffbbaf6, org.springframework.security.web.header.HeaderWriterFilter@dc66e873, org.springframework.security.web.authentication.logout.LogoutFilter@67d72250, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@319dd4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f3f39106, org.springframework.security.web.session.SessionManagementFilter@b314a0bf, org.springframework.security.web.access.ExceptionTranslationFilter@1be7f61a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@585c1e22]
2018-07-04 22:16:59.586  INFO 13216 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:16:59.790  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ae01d60: startup date [Wed Jul 04 22:16:48 IST 2018]; root of context hierarchy
2018-07-04 22:16:59.849  WARN 13216 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-07-04 22:16:59.884  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchResponse> com.touchmark.briyani.branch.BranchController.getAllBranch()
2018-07-04 22:16:59.888  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchEntity> com.touchmark.briyani.branch.BranchController.saveBranch(com.touchmark.briyani.branch.Branch)
2018-07-04 22:16:59.888  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.customer.CustomerResponse> com.touchmark.briyani.customer.CustomerController.getAll()
2018-07-04 22:16:59.892  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.customer.CustomerEntity> com.touchmark.briyani.customer.CustomerController.saveBranch(com.touchmark.briyani.customer.Customer)
2018-07-04 22:16:59.892  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/customer/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.customer.CustomerController.delete(java.lang.String)
2018-07-04 22:16:59.892  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemResponse> com.touchmark.briyani.item.ItemController.getAllBranch()
2018-07-04 22:16:59.892  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemEntity> com.touchmark.briyani.item.ItemController.saveBranch(com.touchmark.briyani.item.Item)
2018-07-04 22:16:59.896  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/menu/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.MenuResponse> com.touchmark.briyani.item.MenuController.getAllBranch()
2018-07-04 22:16:59.896  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/menu/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.MenuEntity> com.touchmark.briyani.item.MenuController.saveBranch(com.touchmark.briyani.item.Menu)
2018-07-04 22:16:59.896  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.OrderResponse> com.touchmark.briyani.order.OrderController.getAll()
2018-07-04 22:16:59.896  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/listForCustomer/{id}]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.OrderResponse> com.touchmark.briyani.order.OrderController.getOrdersForCustomer(java.lang.String)
2018-07-04 22:16:59.896  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/createOrder],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.order.OrderController.createOrder(com.touchmark.briyani.order.CreateOrder)
2018-07-04 22:16:59.900  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderResponse> com.touchmark.briyani.rider.RiderController.getAll()
2018-07-04 22:16:59.900  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderEntity> com.touchmark.briyani.rider.RiderController.saveBranch(com.touchmark.briyani.rider.Rider)
2018-07-04 22:16:59.900  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.rider.RiderController.delete(java.lang.String)
2018-07-04 22:16:59.904  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.staff.StaffResponse> com.touchmark.briyani.staff.StaffController.getAll()
2018-07-04 22:16:59.904  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/save],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.staff.StaffEntity> com.touchmark.briyani.staff.StaffController.save(com.touchmark.briyani.staff.Staff)
2018-07-04 22:16:59.904  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/staff/delete],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> com.touchmark.briyani.staff.StaffController.delete(java.lang.String)
2018-07-04 22:16:59.912  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 22:16:59.912  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 22:16:59.968  INFO 13216 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:16:59.968  INFO 13216 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:16:59.992  INFO 13216 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2018-07-04 22:17:01.096  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ae01d60: startup date [Wed Jul 04 22:16:48 IST 2018]; root of context hierarchy
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-07-04 22:17:01.140  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2018-07-04 22:17:01.144  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2018-07-04 22:17:01.152  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.152  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.152  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.152  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2018-07-04 22:17:01.156  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2018-07-04 22:17:01.160  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2018-07-04 22:17:01.160  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2018-07-04 22:17:01.160  INFO 13216 --- [           main] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2018-07-04 22:17:01.168  INFO 13216 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.168  INFO 13216 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2018-07-04 22:17:01.168  INFO 13216 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2018-07-04 22:17:01.172  INFO 13216 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2018-07-04 22:17:01.172  INFO 13216 --- [           main] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2018-07-04 22:17:01.379  INFO 13216 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-04 22:17:01.379  INFO 13216 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-04 22:17:01.391  INFO 13216 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2018-07-04 22:17:01.395  INFO 13216 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d8bc664f: startup date [Wed Jul 04 22:17:01 IST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ae01d60
2018-07-04 22:17:01.471  INFO 13216 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'handlerExceptionResolver' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=handlerExceptionResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.web.servlet.WebMvcEndpointChildContextConfiguration; factoryMethodName=compositeHandlerExceptionResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class]]
2018-07-04 22:17:01.547  INFO 13216 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63639 (http)
2018-07-04 22:17:01.547  INFO 13216 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-04 22:17:01.547  INFO 13216 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 22:17:01.568  INFO 13216 --- [ost-startStop-1] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2018-07-04 22:17:01.568  INFO 13216 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 173 ms
2018-07-04 22:17:01.632  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-04 22:17:01.632  INFO 13216 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 22:17:01.664  INFO 13216 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 22:17:01.680  INFO 13216 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 22:17:01.680  INFO 13216 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 22:17:01.684  INFO 13216 --- [           main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 22:17:01.716  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementErrorEndpoint.invoke(org.springframework.web.context.request.ServletWebRequest)
2018-07-04 22:17:01.732  INFO 13216 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:17:01.732  INFO 13216 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 22:17:01.767  INFO 13216 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d8bc664f: startup date [Wed Jul 04 22:17:01 IST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ae01d60
2018-07-04 22:17:01.831  INFO 13216 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63639 (http) with context path ''
2018-07-04 22:17:01.878  INFO 13216 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63636 (http) with context path ''
2018-07-04 22:17:01.882  INFO 13216 --- [           main] c.t.briyani.app.BriyaniApplication       : Started BriyaniApplication in 14.228 seconds (JVM running for 14.961)
2018-07-04 22:17:24.041  INFO 13216 --- [io-63636-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 22:17:24.041  INFO 13216 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 22:17:24.065  INFO 13216 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24.413+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=null)
2018-07-04 22:17:48.373  INFO 13216 --- [io-63636-exec-3] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
OrderController - createOrder - Object Received To Save CreateOrder(couponCode=null, userName=null, branchID=BRAN1, customerID=CUST1, deliveryAddress=Address(doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetail(item=Item(id=CHBIR1, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=10, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR2, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=20, unitPrice=0.0), OrderDetail(item=Item(id=CHBIR3, name=null, description=null, price=0.0, menuName=null, menuId=null), quantity=30, unitPrice=0.0)])
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: insert into address (area, city, country, door_number, state, street, zipcode) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_info (branch_id, coupon_code, customer_id, date_and_time, address_id, payment_status, tax_amount, tax_percentage, total_amount, user_name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: insert into order_detail (item_id, order_id, quantity, unit_price) values (?, ?, ?, ?)
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
OrderService - CreateOrder - Order To Create OrderEntity(orderId=4, dateAndTime=2018-07-04T22:17:57.873+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=635.99994, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=null)
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 4
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=4, dateAndTime=2018-07-04T22:17:57+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)])
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 4
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=4, dateAndTime=2018-07-04T22:17:57+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)])
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 4
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=4, dateAndTime=2018-07-04T22:17:57+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)])
Hibernate: select riderentit0_.id as id1_9_, riderentit0_.address_id as address14_9_, riderentit0_.date_of_birth as date_of_2_9_, riderentit0_.department_type as departme3_9_, riderentit0_.email as email4_9_, riderentit0_.gender as gender5_9_, riderentit0_.mobile_number as mobile_n6_9_, riderentit0_.rider_id_card_no as rider_id7_9_, riderentit0_.rider_person_first_name as rider_pe8_9_, riderentit0_.rider_person_last_name as rider_pe9_9_, riderentit0_.rider_person_middle_name as rider_p10_9_, riderentit0_.rider_person_number as rider_p11_9_, riderentit0_.rider_person_salutation as rider_p12_9_, riderentit0_.zone as zone13_9_ from rider riderentit0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select itementity0_.id as id1_4_, itementity0_.description as descript2_4_, itementity0_.menu_id as menu_id5_4_, itementity0_.name as name3_4_, itementity0_.price as price4_4_ from item itementity0_
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select staffentit0_.id as id1_10_, staffentit0_.address_id as address14_10_, staffentit0_.date_of_birth as date_of_2_10_, staffentit0_.date_of_join as date_of_3_10_, staffentit0_.email as email4_10_, staffentit0_.first_name as first_na5_10_, staffentit0_.gender as gender6_10_, staffentit0_.last_name as last_nam7_10_, staffentit0_.middle_name as middle_n8_10_, staffentit0_.mobile_number as mobile_n9_10_, staffentit0_.notes as notes10_10_, staffentit0_.password as passwor11_10_, staffentit0_.role as role12_10_, staffentit0_.salutation as salutat13_10_ from staff staffentit0_
Hibernate: select staffentit0_.id as id1_10_, staffentit0_.address_id as address14_10_, staffentit0_.date_of_birth as date_of_2_10_, staffentit0_.date_of_join as date_of_3_10_, staffentit0_.email as email4_10_, staffentit0_.first_name as first_na5_10_, staffentit0_.gender as gender6_10_, staffentit0_.last_name as last_nam7_10_, staffentit0_.middle_name as middle_n8_10_, staffentit0_.mobile_number as mobile_n9_10_, staffentit0_.notes as notes10_10_, staffentit0_.password as passwor11_10_, staffentit0_.role as role12_10_, staffentit0_.salutation as salutat13_10_ from staff staffentit0_
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_ left outer join customer customeren1_ on orderentit0_.customer_id=customeren1_.id where customeren1_.id=?
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 3
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)]
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 4
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=11, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=3, dateAndTime=2018-07-04T22:17:24+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=16, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=6, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=7, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=3), OrderDetailEntity(orderDetailsId=8, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=3)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=4, dateAndTime=2018-07-04T22:17:57+05:30, couponCode=null, taxPercentage=6.0, taxAmount=36.0, totalAmount=636.0, userName=null, paymentStatus=null, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=1, firstName=Devaki, lastName=Vengadesh, middleName=V, salutation=Mrs., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-12-12T00:00+05:30, email=devaki@vengadesh.com, address=AddressEntity(addressId=8, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=17, doorNumber=10, street=First Cross Street, area=Inner Circle, city=Chennai, state=Tamil Nadu, country=India, zipcode=600001), orderDetails=[OrderDetailEntity(orderDetailsId=9, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=10, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=10, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=20, unitPrice=10.0, orderId=4), OrderDetailEntity(orderDetailsId=11, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=30, unitPrice=10.0, orderId=4)])
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_ left outer join customer customeren1_ on orderentit0_.customer_id=customeren1_.id where customeren1_.id=?
Hibernate: select orderdetai0_.order_details_id as order_de1_6_, orderdetai0_.item_id as item_id5_6_, orderdetai0_.order_id as order_id2_6_, orderdetai0_.quantity as quantity3_6_, orderdetai0_.unit_price as unit_pri4_6_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_4_0_, itementity0_.description as descript2_4_0_, itementity0_.menu_id as menu_id5_4_0_, itementity0_.name as name3_4_0_, itementity0_.price as price4_4_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_5_0_, menuentity0_.name as name2_5_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select customeren0_.id as id1_3_0_, customeren0_.address_id as address10_3_0_, customeren0_.date_of_birth as date_of_2_3_0_, customeren0_.email as email3_3_0_, customeren0_.first_name as first_na4_3_0_, customeren0_.last_name as last_nam5_3_0_, customeren0_.middle_name as middle_n6_3_0_, customeren0_.mobile_number as mobile_n7_3_0_, customeren0_.salutation as salutati8_3_0_, customeren0_.telephone_number as telephon9_3_0_ from customer customeren0_ where customeren0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-04T22:16:56+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=3, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), customer=CustomerEntity(id=2, firstName=Jyothi, lastName=Kumari, middleName=A, salutation=Miss., mobileNumber=3423423, telephoneNumber=null, dateOfBirth=1991-01-01T00:00+05:30, email=kumari@jyoti.com, address=AddressEntity(addressId=9, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186)), deliveryAddress=AddressEntity(addressId=12, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select customeren0_.id as id1_3_, customeren0_.address_id as address10_3_, customeren0_.date_of_birth as date_of_2_3_, customeren0_.email as email3_3_, customeren0_.first_name as first_na4_3_, customeren0_.last_name as last_nam5_3_, customeren0_.middle_name as middle_n6_3_, customeren0_.mobile_number as mobile_n7_3_, customeren0_.salutation as salutati8_3_, customeren0_.telephone_number as telephon9_3_ from customer customeren0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select orderentit0_.order_id as order_id1_7_, orderentit0_.branch_id as branch_i9_7_, orderentit0_.coupon_code as coupon_c2_7_, orderentit0_.customer_id as custome10_7_, orderentit0_.date_and_time as date_and3_7_, orderentit0_.address_id as address11_7_, orderentit0_.payment_status as payment_4_7_, orderentit0_.tax_amount as tax_amou5_7_, orderentit0_.tax_percentage as tax_perc6_7_, orderentit0_.total_amount as total_am7_7_, orderentit0_.user_name as user_nam8_7_ from order_info orderentit0_ left outer join customer customeren1_ on orderentit0_.customer_id=customeren1_.id where customeren1_.id=?
