:clean
:compileJava
:processResources
:classes
:bootJar
:jar SKIPPED
:assemble
:compileTestJava NO-SOURCE
:processTestResources NO-SOURCE
:testClasses UP-TO-DATE
:test NO-SOURCE
:check UP-TO-DATE
:build
:bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.3.RELEASE)

2018-07-03 18:05:25.576  INFO 12152 --- [           main] c.t.briyani.app.BriyaniApplication       : Starting BriyaniApplication on WGC1007LBGL72 with PID 12152 (C:\Xigma\Accurev\Briyani\Branch\build\classes\java\main started by SPRANAVA in C:\Xigma\Accurev\Briyani\Branch)
2018-07-03 18:05:25.592  INFO 12152 --- [           main] c.t.briyani.app.BriyaniApplication       : No active profile set, falling back to default profiles: default
2018-07-03 18:05:25.852  INFO 12152 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3993df61: startup date [Tue Jul 03 18:05:25 IST 2018]; root of context hierarchy
2018-07-03 18:05:28.256  INFO 12152 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f94695d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-03 18:05:28.984  INFO 12152 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63636 (http)
2018-07-03 18:05:29.008  INFO 12152 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-03 18:05:29.008  INFO 12152 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-03 18:05:29.024  INFO 12152 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin\compressedrefs;C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Xigma\Personal\APPS\Python27;C:\Xigma\Personal\APPS\mysql-5.5.60-winx64\bin;C:\Xigma\Personal\APPS\apache-maven-3.5.4\bin;C:\Xigma\Personal\APPS\OC;C:\ford\jdk\ibm\ibm-jdk8u151-b12\bin;C:\Xigma\Personal\APPS\Gradle\gradle-4.6\bin;C:\Xigma\Personal\APPS\node-v4.8.3-win-x64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319;C:\Program Files\CloudFoundry;C:\Program Files (x86)\RSA SecurID Token Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\7-Zip;C:\Program Files (x86)\AccuRev\bin;C:\Program Files\Adobe\Adobe PDF iFilter 11 for 64-bit platforms\bin\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\PuTTY\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Xigma\Personal\APPS\NodeJS\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\ManagementStudio\;C:\Users\spranava\AppData\Local\GitHubDesktop\bin;C:\Users\spranava\AppData\Roaming\npm;.]
2018-07-03 18:05:29.193  INFO 12152 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-07-03 18:05:29.194  INFO 12152 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3349 ms
2018-07-03 18:05:29.403  INFO 12152 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-03 18:05:29.405  INFO 12152 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-03 18:05:29.405  INFO 12152 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-03 18:05:29.405  INFO 12152 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-03 18:05:29.405  INFO 12152 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-03 18:05:29.651  INFO 12152 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2018-07-03 18:05:29.862  INFO 12152 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2018-07-03 18:05:29.869  INFO 12152 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/schema-mysql.sql]
2018-07-03 18:05:29.904  INFO 12152 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executed SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/schema-mysql.sql] in 35 ms.
2018-07-03 18:05:29.904  INFO 12152 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]
2018-07-03 18:05:29.935  WARN 12152 --- [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]: TRUNCATE TABLE ORDER_DETAIL; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
2018-07-03 18:05:29.935  INFO 12152 --- [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2018-07-03 18:05:29.958  INFO 12152 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2018-07-03 18:05:29.974 ERROR 12152 --- [           main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]: TRUNCATE TABLE ORDER_DETAIL; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$100.000000000FE7D0A0.getObject(Unknown Source) ~[na:na]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$100.000000000FE7D0A0.getObject(Unknown Source) ~[na:na]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395) [spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327) [spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255) [spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243) [spring-boot-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at com.touchmark.briyani.app.BriyaniApplication.main(BriyaniApplication.java:17) [main/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]: TRUNCATE TABLE ORDER_DETAIL; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:589) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$100.000000000FE7D0A0.getObject(Unknown Source) ~[na:na]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 30 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]: TRUNCATE TABLE ORDER_DETAIL; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$100.000000000FE7D0A0.getObject(Unknown Source) ~[na:na]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:224) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1015) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:339) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:334) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:55) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:439) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1712) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 41 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]: TRUNCATE TABLE ORDER_DETAIL; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:494) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:240) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:210) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:123) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:93) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:37) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354) ~[spring-context-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.initialize(DataSourceInitializerInvoker.java:73) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.afterPropertiesSet(DataSourceInitializerInvoker.java:66) ~[spring-boot-autoconfigure-2.0.3.RELEASE.jar:2.0.3.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 55 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.order_detail' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:83) ~[na:1.8.0]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57) ~[na:1.8.0]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:437) ~[na:1.8.0]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-2.7.9.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-2.7.9.jar:na]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:473) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 70 common frames omitted

:bootRun FAILED

Deprecated Gradle features were used in this build, making it incompatible with Gradle 5.0.
See https://docs.gradle.org/4.6/userguide/command_line_interface.html#sec:command_line_warnings
5 actionable tasks: 5 executed
:clean
:compileJava
:processResources
:classes
:bootJar
:jar SKIPPED
:assemble
:compileTestJava NO-SOURCE
:processTestResources NO-SOURCE
:testClasses UP-TO-DATE
:test NO-SOURCE
:check UP-TO-DATE
:build
:bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.3.RELEASE)

2018-07-03 18:07:06.196  INFO 12572 --- [           main] c.t.briyani.app.BriyaniApplication       : Starting BriyaniApplication on WGC1007LBGL72 with PID 12572 (C:\Xigma\Accurev\Briyani\Branch\build\classes\java\main started by SPRANAVA in C:\Xigma\Accurev\Briyani\Branch)
2018-07-03 18:07:06.204  INFO 12572 --- [           main] c.t.briyani.app.BriyaniApplication       : No active profile set, falling back to default profiles: default
2018-07-03 18:07:06.518  INFO 12572 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16982dbe: startup date [Tue Jul 03 18:07:06 IST 2018]; root of context hierarchy
2018-07-03 18:07:09.553  INFO 12572 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec97bf8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-03 18:07:10.291  INFO 12572 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 63636 (http)
2018-07-03 18:07:10.340  INFO 12572 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-03 18:07:10.340  INFO 12572 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-03 18:07:10.350  INFO 12572 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin\compressedrefs;C:\ford\jdk\ibm\ibm-jdk8u151-b12\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Xigma\Personal\APPS\Python27;C:\Xigma\Personal\APPS\mysql-5.5.60-winx64\bin;C:\Xigma\Personal\APPS\apache-maven-3.5.4\bin;C:\Xigma\Personal\APPS\OC;C:\ford\jdk\ibm\ibm-jdk8u151-b12\bin;C:\Xigma\Personal\APPS\Gradle\gradle-4.6\bin;C:\Xigma\Personal\APPS\node-v4.8.3-win-x64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319;C:\Program Files\CloudFoundry;C:\Program Files (x86)\RSA SecurID Token Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\7-Zip;C:\Program Files (x86)\AccuRev\bin;C:\Program Files\Adobe\Adobe PDF iFilter 11 for 64-bit platforms\bin\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\PuTTY\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Xigma\Personal\APPS\NodeJS\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\ManagementStudio\;C:\Users\spranava\AppData\Local\GitHubDesktop\bin;C:\Users\spranava\AppData\Roaming\npm;.]
2018-07-03 18:07:10.486  INFO 12572 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-07-03 18:07:10.486  INFO 12572 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3968 ms
2018-07-03 18:07:10.711  INFO 12572 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-03 18:07:10.717  INFO 12572 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-03 18:07:10.718  INFO 12572 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-03 18:07:10.718  INFO 12572 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-03 18:07:10.718  INFO 12572 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-03 18:07:11.064  INFO 12572 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2018-07-03 18:07:11.267  INFO 12572 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2018-07-03 18:07:11.384  INFO 12572 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-07-03 18:07:11.404  INFO 12572 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-07-03 18:07:11.518  INFO 12572 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.17.Final}
2018-07-03 18:07:11.518  INFO 12572 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2018-07-03 18:07:11.576  INFO 12572 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-07-03 18:07:11.772  INFO 12572 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Hibernate: create table actor (actor_id bigint not null auto_increment, first_name varchar(255), last_name varchar(255), middle_name varchar(255), password varchar(255), roles varchar(255), user_name varchar(255), primary key (actor_id)) engine=MyISAM
Hibernate: create table address (address_id bigint not null auto_increment, area varchar(255), city varchar(255), country varchar(255), door_number varchar(255), state varchar(255), street varchar(255), zipcode varchar(255), primary key (address_id)) engine=MyISAM
Hibernate: create table branch (id bigint not null auto_increment, contact_person_first_name varchar(255), contact_person_last_name varchar(255), contact_person_middle_name varchar(255), contact_person_number varchar(255), contact_person_salutation varchar(255), email varchar(255), latitude varchar(255), longitude varchar(255), mobile_number varchar(255), name varchar(255), notes varchar(255), telephone varchar(255), address_id bigint, primary key (id)) engine=MyISAM
Hibernate: create table item (id bigint not null auto_increment, description varchar(255), name varchar(255), price float, menu_id bigint not null, primary key (id)) engine=MyISAM
Hibernate: create table menu (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
Hibernate: create table order_detail (order_details_id bigint not null auto_increment, order_id bigint, quantity integer, unit_price float, item_id bigint, primary key (order_details_id)) engine=MyISAM
Hibernate: create table order_info (order_id bigint not null auto_increment, coupon_code varchar(255), date_and_time datetime, payment_status varchar(255), tax_amount float, tax_percentage float, total_amount float, user_name varchar(255), branch_id bigint, address_id bigint, primary key (order_id)) engine=MyISAM
Hibernate: create table order_info_order_details (order_entity_order_id bigint not null, order_details_order_details_id bigint not null) engine=MyISAM
Hibernate: create table rider (id bigint not null auto_increment, date_of_birth datetime, department_type varchar(255), email varchar(255), gender varchar(255), mobile_number varchar(255), rider_id_card_no varchar(255), rider_person_first_name varchar(255), rider_person_last_name varchar(255), rider_person_middle_name varchar(255), rider_person_number varchar(255), rider_person_salutation varchar(255), zone varchar(255), address_id bigint, primary key (id)) engine=MyISAM
Hibernate: alter table order_info_order_details drop index UK_dr7j3pyxu0t9a2q0qy930t92i
Hibernate: alter table order_info_order_details add constraint UK_dr7j3pyxu0t9a2q0qy930t92i unique (order_details_order_details_id)
Hibernate: alter table branch add constraint FKr5n331c13dyb3kbq1jlo53mh5 foreign key (address_id) references address (address_id)
Hibernate: alter table item add constraint FKimdwniosg0e3m5t5qksxyd5vb foreign key (menu_id) references menu (id)
Hibernate: alter table order_detail add constraint FK4dtqbi7ilse9x730y087wagm2 foreign key (item_id) references item (id)
Hibernate: alter table order_info add constraint FKjkef7c200omqon2cy66hopchn foreign key (branch_id) references branch (id)
Hibernate: alter table order_info add constraint FKcypxtb62kv6rakqkjuapurib3 foreign key (address_id) references address (address_id)
Hibernate: alter table order_info_order_details add constraint FKhfq0u4791d974oph5g0fcpa7v foreign key (order_details_order_details_id) references order_detail (order_details_id)
Hibernate: alter table order_info_order_details add constraint FKcypmhwiyttp0tjftylifrns5k foreign key (order_entity_order_id) references order_info (order_id)
Hibernate: alter table rider add constraint FK6h4puhdxui02p93hew7j880ld foreign key (address_id) references address (address_id)
2018-07-03 18:07:12.964  INFO 12572 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-07-03 18:07:13.076  INFO 12572 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql]
2018-07-03 18:07:13.114  INFO 12572 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executed SQL script from URL [file:/C:/Xigma/Accurev/Briyani/Branch/build/resources/main/data-mysql.sql] in 37 ms.
2018-07-03 18:07:13.918  INFO 12572 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-03 18:07:14.375  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16982dbe: startup date [Tue Jul 03 18:07:06 IST 2018]; root of context hierarchy
2018-07-03 18:07:14.386  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Detected ResponseBodyAdvice bean in briyaniApplication.JsonpAdvice
2018-07-03 18:07:14.436  WARN 12572 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-07-03 18:07:14.485  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchResponse> com.touchmark.briyani.branch.BranchController.getAllBranch()
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/branch/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.branch.BranchEntity> com.touchmark.briyani.branch.BranchController.saveBranch(com.touchmark.briyani.branch.Branch)
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemResponse> com.touchmark.briyani.item.ItemController.getAllBranch()
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/item/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.item.ItemEntity> com.touchmark.briyani.item.ItemController.saveBranch(com.touchmark.briyani.item.Item)
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.OrderResponse> com.touchmark.briyani.order.OrderController.getAll()
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/order/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.order.Order> com.touchmark.briyani.order.OrderController.save(com.touchmark.briyani.order.Order)
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/listAll]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderResponse> com.touchmark.briyani.rider.RiderController.getAll()
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/rider/save]}" onto public org.springframework.http.ResponseEntity<com.touchmark.briyani.rider.RiderEntity> com.touchmark.briyani.rider.RiderController.saveBranch(com.touchmark.briyani.rider.Rider)
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-03 18:07:14.487  INFO 12572 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-03 18:07:14.518  INFO 12572 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-03 18:07:14.518  INFO 12572 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-03 18:07:14.560  INFO 12572 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected ResponseBodyAdvice implementation in briyaniApplication.JsonpAdvice
2018-07-03 18:07:14.943  INFO 12572 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-03 18:07:14.943  INFO 12572 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-03 18:07:14.943  INFO 12572 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2018-07-03 18:07:14.993  INFO 12572 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63636 (http) with context path ''
2018-07-03 18:07:15.009  INFO 12572 --- [           main] c.t.briyani.app.BriyaniApplication       : Started BriyaniApplication in 9.614 seconds (JVM running for 10.451)
2018-07-03 18:09:22.421  INFO 12572 --- [io-63636-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-03 18:09:22.422  INFO 12572 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-03 18:09:22.464  INFO 12572 --- [io-63636-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-03 18:09:22.568  INFO 12572 --- [io-63636-exec-1] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select riderentit0_.id as id1_8_, riderentit0_.address_id as address14_8_, riderentit0_.date_of_birth as date_of_2_8_, riderentit0_.department_type as departme3_8_, riderentit0_.email as email4_8_, riderentit0_.gender as gender5_8_, riderentit0_.mobile_number as mobile_n6_8_, riderentit0_.rider_id_card_no as rider_id7_8_, riderentit0_.rider_person_first_name as rider_pe8_8_, riderentit0_.rider_person_last_name as rider_pe9_8_, riderentit0_.rider_person_middle_name as rider_p10_8_, riderentit0_.rider_person_number as rider_p11_8_, riderentit0_.rider_person_salutation as rider_p12_8_, riderentit0_.zone as zone13_8_ from rider riderentit0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select itementity0_.id as id1_3_, itementity0_.description as descript2_3_, itementity0_.menu_id as menu_id5_3_, itementity0_.name as name3_3_, itementity0_.price as price4_3_ from item itementity0_
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select orderentit0_.order_id as order_id1_6_, orderentit0_.branch_id as branch_i9_6_, orderentit0_.coupon_code as coupon_c2_6_, orderentit0_.date_and_time as date_and3_6_, orderentit0_.address_id as address10_6_, orderentit0_.payment_status as payment_4_6_, orderentit0_.tax_amount as tax_amou5_6_, orderentit0_.tax_percentage as tax_perc6_6_, orderentit0_.total_amount as total_am7_6_, orderentit0_.user_name as user_nam8_6_ from order_info orderentit0_
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 1
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
Hibernate: select itementity0_.id as id1_3_0_, itementity0_.description as descript2_3_0_, itementity0_.menu_id as menu_id5_3_0_, itementity0_.name as name3_3_0_, itementity0_.price as price4_3_0_ from item itementity0_ where itementity0_.id=?
Hibernate: select menuentity0_.id as id1_4_0_, menuentity0_.name as name2_4_0_ from menu menuentity0_ where menuentity0_.id=?
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)]
Hibernate: select orderdetai0_.order_details_id as order_de1_5_, orderdetai0_.item_id as item_id5_5_, orderdetai0_.order_id as order_id2_5_, orderdetai0_.quantity as quantity3_5_, orderdetai0_.unit_price as unit_pri4_5_ from order_detail orderdetai0_ where orderdetai0_.order_id=?
OrderService - getAll - Order ID 2
OrderService - getAll - Order details [OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)]
Hibernate: select branchenti0_.id as id1_2_0_, branchenti0_.address_id as address14_2_0_, branchenti0_.contact_person_first_name as contact_2_2_0_, branchenti0_.contact_person_last_name as contact_3_2_0_, branchenti0_.contact_person_middle_name as contact_4_2_0_, branchenti0_.contact_person_number as contact_5_2_0_, branchenti0_.contact_person_salutation as contact_6_2_0_, branchenti0_.email as email7_2_0_, branchenti0_.latitude as latitude8_2_0_, branchenti0_.longitude as longitud9_2_0_, branchenti0_.mobile_number as mobile_10_2_0_, branchenti0_.name as name11_2_0_, branchenti0_.notes as notes12_2_0_, branchenti0_.telephone as telepho13_2_0_ from branch branchenti0_ where branchenti0_.id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=1, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), orderDetails=[OrderDetailEntity(orderDetailsId=1, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=5, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=2, item=ItemEntity(id=2, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=2, name=Mutton)), quantity=3, unitPrice=10.0, orderId=1), OrderDetailEntity(orderDetailsId=3, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=2, unitPrice=10.0, orderId=1)])
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Order - transformEntity - Order Received OrderEntity(orderId=2, dateAndTime=2018-07-03T18:07:13+05:30, couponCode=, taxPercentage=6.0, taxAmount=6.0, totalAmount=106.0, userName=Alex123, paymentStatus=completed, branch=BranchEntity(id=1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=AddressEntity(addressId=1, doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), deliveryAddress=AddressEntity(addressId=2, doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), orderDetails=[OrderDetailEntity(orderDetailsId=4, item=ItemEntity(id=1, name=Briyani, description=With Onions Marinated in Curd, price=10.0, menu=MenuEntity(id=1, name=Chicken)), quantity=6, unitPrice=10.0, orderId=2), OrderDetailEntity(orderDetailsId=5, item=ItemEntity(id=3, name=Fried Rice, description=With Chilli Sauce and Tobasco Sauce, price=10.0, menu=MenuEntity(id=3, name=Steak)), quantity=4, unitPrice=10.0, orderId=2)])
Hibernate: select branchenti0_.id as id1_2_, branchenti0_.address_id as address14_2_, branchenti0_.contact_person_first_name as contact_2_2_, branchenti0_.contact_person_last_name as contact_3_2_, branchenti0_.contact_person_middle_name as contact_4_2_, branchenti0_.contact_person_number as contact_5_2_, branchenti0_.contact_person_salutation as contact_6_2_, branchenti0_.email as email7_2_, branchenti0_.latitude as latitude8_2_, branchenti0_.longitude as longitud9_2_, branchenti0_.mobile_number as mobile_10_2_, branchenti0_.name as name11_2_, branchenti0_.notes as notes12_2_, branchenti0_.telephone as telepho13_2_ from branch branchenti0_
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
Hibernate: select addressent0_.address_id as address_1_1_0_, addressent0_.area as area2_1_0_, addressent0_.city as city3_1_0_, addressent0_.country as country4_1_0_, addressent0_.door_number as door_num5_1_0_, addressent0_.state as state6_1_0_, addressent0_.street as street7_1_0_, addressent0_.zipcode as zipcode8_1_0_ from address addressent0_ where addressent0_.address_id=?
BranchController - getAllBranch - Branch To Send BranchResponse(branch=[Branch(id=BRAN1, name=OMR Branch, email=ajith.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in omr, address=Address(doorNumber=5, street=x Street, area=dunton, city=dunton, state=GB, country=England, zipcode=444555), contactPersonFirstName=Ajith, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455), Branch(id=BRAN2, name=ECR Branch, email=prabhas.roy@gmail.com, latitude=234234, longitude=234234, notes=Branch in EC, address=Address(doorNumber=5, street=x Street, area=dearborn, city=dearborn, state=Michigan, country=United States, zipcode=42186), contactPersonFirstName=Prabhas, contactPersonLastName=Roy, contactPersonMiddleName=M, contactPersonSalutation=Mr., mobileNumber=123234234, telephone=323234234, contactPersonNumber=123455)])
